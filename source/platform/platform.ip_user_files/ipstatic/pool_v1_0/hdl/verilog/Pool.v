// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Pool,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.800000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=11,HLS_SYN_FF=3537,HLS_SYN_LUT=4499}" *)

module Pool (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 77'b1;
parameter    ap_ST_st2_fsm_1 = 77'b10;
parameter    ap_ST_st3_fsm_2 = 77'b100;
parameter    ap_ST_st4_fsm_3 = 77'b1000;
parameter    ap_ST_st5_fsm_4 = 77'b10000;
parameter    ap_ST_st6_fsm_5 = 77'b100000;
parameter    ap_ST_st7_fsm_6 = 77'b1000000;
parameter    ap_ST_st8_fsm_7 = 77'b10000000;
parameter    ap_ST_st9_fsm_8 = 77'b100000000;
parameter    ap_ST_st10_fsm_9 = 77'b1000000000;
parameter    ap_ST_st11_fsm_10 = 77'b10000000000;
parameter    ap_ST_st12_fsm_11 = 77'b100000000000;
parameter    ap_ST_st13_fsm_12 = 77'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 77'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 77'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 77'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 77'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 77'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 77'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 77'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 77'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 77'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 77'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 77'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 77'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 77'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 77'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 77'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 77'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 77'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 77'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 77'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 77'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 77'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 77'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 77'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 77'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 77'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 77'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 77'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 77'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 77'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 77'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 77'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 77'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 77'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 77'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 77'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 77'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 77'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 77'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 77'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 77'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 77'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 77'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 77'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 77'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 77'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 77'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 77'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 77'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 77'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 77'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 77'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 77'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 77'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 77'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 77'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 77'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 77'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 77'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 77'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 77'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 77'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 77'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 77'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 77'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5BB1A2BC = 32'b1011011101100011010001010111100;
parameter    ap_const_lv32_DBB1A2BC = 32'b11011011101100011010001010111100;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_2 = 5'b10;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (C_M_AXI_GMEM_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1 : 0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1 : 0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1 : 0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1 : 0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1 : 0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1 : 0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [76:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_94;
reg    ap_ready;
wire   [15:0] CHin_V;
wire   [15:0] Hin_V;
wire   [15:0] Win_V;
wire   [7:0] Kx_V;
wire   [7:0] Ky_V;
wire   [1:0] mode_V;
wire   [31:0] feature_in;
wire   [31:0] feature_out;
reg    gmem_blk_n_AR;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_166;
reg    gmem_blk_n_R;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_174;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_181;
reg   [1:0] mode_V_read_reg_882;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_193;
reg    gmem_blk_n_AW;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_209;
reg    gmem_blk_n_W;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_217;
reg    gmem_blk_n_B;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_225;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [31:0] reg_346;
reg    ap_sig_346;
reg   [7:0] Ky_V_read_reg_888;
reg   [7:0] Kx_V_read_reg_893;
reg   [15:0] Win_V_read_reg_898;
reg   [15:0] CHin_V_read_reg_909;
reg   [29:0] tmp_3_reg_916;
reg   [29:0] tmp_5_reg_921;
wire   [15:0] lhs_V_fu_372_p1;
reg   [15:0] lhs_V_reg_926;
wire   [15:0] rhs_V_fu_382_p1;
reg   [15:0] rhs_V_reg_933;
wire   [15:0] r_V_16_fu_392_p2;
reg   [15:0] r_V_16_reg_940;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_384;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_393;
wire   [48:0] tmp_31_cast_fu_400_p1;
reg   [48:0] tmp_31_cast_reg_950;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_402;
wire    grp_fu_376_ap_done;
wire    grp_fu_386_ap_done;
wire   [47:0] tmp_32_cast_fu_403_p1;
reg   [47:0] tmp_32_cast_reg_955;
wire   [15:0] grp_fu_376_p2;
reg   [15:0] r_V_15_reg_962;
wire   [15:0] grp_fu_386_p2;
reg   [15:0] tmp_4_reg_967;
wire   [0:0] tmp_6_fu_406_p2;
reg   [0:0] tmp_6_reg_972;
wire   [31:0] rhs_V_1_fu_416_p1;
reg   [31:0] rhs_V_1_reg_976;
wire   [47:0] rhs_V_2_fu_419_p1;
reg   [47:0] rhs_V_2_reg_985;
wire   [31:0] grp_fu_338_p1;
reg   [31:0] tmp_1_reg_990;
wire   [31:0] rhs_V_1_cast_fu_422_p1;
reg   [31:0] rhs_V_1_cast_reg_995;
wire   [47:0] rhs_V_2_cast_fu_426_p1;
reg   [47:0] rhs_V_2_cast_reg_1000;
wire   [31:0] p_sum_fu_443_p3;
reg   [31:0] p_sum_reg_1005;
wire   [31:0] i_op_assign_17_cast6_fu_451_p1;
reg   [31:0] i_op_assign_17_cast6_reg_1010;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_438;
wire   [15:0] c_fu_460_p2;
reg   [15:0] c_reg_1018;
wire   [47:0] rhs_V_7_cast_fu_466_p1;
reg   [47:0] rhs_V_7_cast_reg_1023;
wire   [0:0] exitcond1_fu_455_p2;
wire   [31:0] next_mul1_fu_470_p2;
reg   [31:0] next_mul1_reg_1030;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_455;
wire   [15:0] next_mul2_fu_475_p2;
reg   [15:0] next_mul2_reg_1035;
wire   [15:0] i_fu_485_p2;
reg   [15:0] i_reg_1043;
wire   [0:0] exitcond2_fu_480_p2;
wire   [47:0] grp_fu_495_p2;
reg   [47:0] r_V_1_reg_1053;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_473;
wire   [15:0] next_mul9_fu_500_p2;
reg   [15:0] next_mul9_reg_1058;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_482;
wire   [31:0] next_mul_fu_505_p2;
reg   [31:0] next_mul_reg_1063;
wire   [15:0] j_fu_515_p2;
reg   [15:0] j_reg_1071;
wire   [7:0] ii_fu_526_p2;
reg   [7:0] ii_reg_1079;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_495;
wire   [31:0] r_V_fu_546_p2;
reg  signed [31:0] r_V_reg_1084;
wire   [0:0] exitcond3_fu_521_p2;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_509;
wire   [47:0] grp_fu_554_p2;
reg   [47:0] r_V_2_reg_1094;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_518;
wire   [7:0] jj_fu_564_p2;
reg   [7:0] jj_reg_1104;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_527;
wire   [15:0] w_V_fu_574_p2;
reg  signed [15:0] w_V_reg_1112;
wire   [0:0] exitcond4_fu_559_p2;
reg   [31:0] gmem_addr_3_reg_1119;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_541;
reg   [31:0] gmem_addr_2_reg_1125;
wire   [0:0] grp_fu_341_p2;
reg   [0:0] tmp_26_reg_1131;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_554;
reg   [0:0] tmp_17_reg_1136;
wire   [31:0] sum_3_feature_in_load_2_fu_707_p3;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_566;
wire   [31:0] feature_in_load_1_sum_3_fu_798_p3;
reg   [31:0] gmem_addr_1_reg_1151;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_579;
wire   [31:0] grp_fu_328_p2;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_588;
wire   [31:0] grp_fu_333_p2;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_597;
reg   [31:0] gmem_addr_reg_1167;
reg   [15:0] op_assign_8_reg_179;
reg   [15:0] i_op_assign_s_reg_190;
wire   [0:0] exitcond_fu_510_p2;
reg   [15:0] phi_mul1_reg_201;
reg   [31:0] r_V_4_reg_213;
reg   [15:0] i_op_assign_1_reg_224;
reg   [31:0] r_V_10_reg_235;
reg   [15:0] phi_mul8_reg_247;
reg   [31:0] i_op_assign_reg_259;
reg   [7:0] i_op_assign_2_reg_269;
reg   [31:0] sum_3_reg_280;
reg   [7:0] i_op_assign_3_reg_299;
reg   [31:0] sum_5_reg_316;
wire  signed [63:0] feature_in2_sum_cast_fu_592_p1;
wire  signed [63:0] feature_in2_sum5_cast_fu_614_p1;
wire  signed [63:0] feature_in2_sum6_cast_fu_818_p1;
wire   [63:0] feature_out4_sum_cast_fu_851_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_sig_ioackin_gmem_ARREADY;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_sig_ioackin_gmem_AWREADY;
reg    ap_reg_ioackin_gmem_WREADY;
reg    ap_sig_ioackin_gmem_WREADY;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_716;
wire   [31:0] grp_fu_338_p0;
wire   [7:0] grp_fu_376_p1;
wire   [7:0] grp_fu_386_p1;
wire   [7:0] r_V_16_fu_392_p0;
wire   [7:0] r_V_16_fu_392_p1;
wire   [0:0] tmp_7_fu_411_p2;
wire   [0:0] tmp_2_fu_437_p2;
wire   [31:0] sum_fu_429_p3;
wire   [31:0] grp_fu_495_p0;
wire   [15:0] grp_fu_495_p1;
wire   [15:0] tmp_8_fu_532_p1;
wire   [15:0] h_V_fu_536_p2;
wire  signed [15:0] r_V_fu_546_p0;
wire   [15:0] r_V_fu_546_p1;
wire   [15:0] grp_fu_554_p1;
wire   [15:0] tmp_10_fu_570_p1;
wire  signed [47:0] grp_fu_875_p3;
(* use_dsp48 = "no" *) wire   [47:0] r_V_14_fu_583_p2;
wire   [47:0] feature_in2_sum_fu_587_p2;
wire  signed [47:0] grp_fu_868_p3;
(* use_dsp48 = "no" *) wire   [47:0] r_V_11_fu_605_p2;
wire   [47:0] feature_in2_sum5_fu_609_p2;
wire   [31:0] sum_3_to_int7_fu_624_p1;
wire   [31:0] feature_in_load_2_to_int_fu_642_p1;
wire   [7:0] tmp_19_fu_628_p4;
wire   [22:0] tmp_20_fu_638_p1;
wire   [0:0] notrhs_fu_666_p2;
wire   [0:0] notlhs_fu_660_p2;
wire   [7:0] tmp_21_fu_646_p4;
wire   [22:0] tmp_22_fu_656_p1;
wire   [0:0] notrhs9_fu_684_p2;
wire   [0:0] notlhs8_fu_678_p2;
wire   [0:0] tmp_23_fu_672_p2;
wire   [0:0] tmp_24_fu_690_p2;
wire   [0:0] tmp_25_fu_696_p2;
wire   [0:0] tmp_27_fu_702_p2;
wire   [31:0] sum_3_to_int_fu_715_p1;
wire   [31:0] feature_in_load_1_to_int_fu_733_p1;
wire   [7:0] tmp_fu_719_p4;
wire   [22:0] tmp_11_fu_729_p1;
wire   [0:0] notrhs1_fu_757_p2;
wire   [0:0] notlhs1_fu_751_p2;
wire   [7:0] tmp_12_fu_737_p4;
wire   [22:0] tmp_13_fu_747_p1;
wire   [0:0] notrhs2_fu_775_p2;
wire   [0:0] notlhs2_fu_769_p2;
wire   [0:0] tmp_14_fu_763_p2;
wire   [0:0] tmp_15_fu_781_p2;
wire   [0:0] tmp_16_fu_787_p2;
wire   [0:0] tmp_18_fu_793_p2;
wire  signed [47:0] grp_fu_861_p3;
(* use_dsp48 = "no" *) wire   [47:0] r_V_7_fu_809_p2;
wire   [47:0] feature_in2_sum6_fu_813_p2;
wire   [31:0] tmp1_fu_828_p2;
wire   [47:0] tmp1_cast_fu_833_p1;
wire   [47:0] tmp_9_fu_837_p2;
wire   [48:0] tmp_17_cast_cast_fu_842_p1;
wire   [48:0] feature_out4_sum_fu_846_p2;
wire   [15:0] grp_fu_861_p0;
wire   [15:0] grp_fu_868_p0;
wire   [15:0] grp_fu_875_p0;
reg    grp_fu_376_ap_start;
reg    grp_fu_386_ap_start;
reg   [76:0] ap_NS_fsm;
wire   [15:0] grp_fu_376_p10;
wire   [15:0] grp_fu_386_p10;
wire   [47:0] grp_fu_495_p00;
reg    ap_sig_200;
reg    ap_sig_187;

// power-on initialization
initial begin
#0 ap_CS_fsm = 77'b1;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

Pool_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Pool_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .CHin_V(CHin_V),
    .Hin_V(Hin_V),
    .Win_V(Win_V),
    .Kx_V(Kx_V),
    .Ky_V(Ky_V),
    .mode_V(mode_V),
    .feature_in(feature_in),
    .feature_out(feature_out)
);

Pool_gmem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
Pool_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_1),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_reg_1167),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_1),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(sum_5_reg_316),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_F),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

Pool_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Pool_fadd_32ns_32ns_32_5_full_dsp_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sum_3_reg_280),
    .din1(reg_346),
    .ce(1'b1),
    .dout(grp_fu_328_p2)
);

Pool_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Pool_fdiv_32ns_32ns_32_16_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(i_op_assign_reg_259),
    .din1(tmp_1_reg_990),
    .ce(1'b1),
    .dout(grp_fu_333_p2)
);

Pool_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Pool_sitofp_32ns_32_6_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_338_p0),
    .ce(1'b1),
    .dout(grp_fu_338_p1)
);

Pool_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
Pool_fcmp_32ns_32ns_1_1_U3(
    .din0(sum_3_reg_280),
    .din1(reg_346),
    .opcode(ap_const_lv5_2),
    .dout(grp_fu_341_p2)
);

Pool_udiv_16ns_8ns_16_20_seq #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
Pool_udiv_16ns_8ns_16_20_seq_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_376_ap_start),
    .done(grp_fu_376_ap_done),
    .din0(Win_V),
    .din1(grp_fu_376_p1),
    .ce(1'b1),
    .dout(grp_fu_376_p2)
);

Pool_udiv_16ns_8ns_16_20_seq #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
Pool_udiv_16ns_8ns_16_20_seq_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_386_ap_start),
    .done(grp_fu_386_ap_done),
    .din0(Hin_V),
    .din1(grp_fu_386_p1),
    .ce(1'b1),
    .dout(grp_fu_386_p2)
);

Pool_mul_32ns_16ns_48_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
Pool_mul_32ns_16ns_48_3_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_495_p0),
    .din1(grp_fu_495_p1),
    .ce(1'b1),
    .dout(grp_fu_495_p2)
);

Pool_mul_32s_16ns_48_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
Pool_mul_32s_16ns_48_3_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_V_reg_1084),
    .din1(grp_fu_554_p1),
    .ce(1'b1),
    .dout(grp_fu_554_p2)
);

Pool_mac_muladd_16ns_16s_48ns_48_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
Pool_mac_muladd_16ns_16s_48ns_48_1_U8(
    .din0(grp_fu_861_p0),
    .din1(w_V_reg_1112),
    .din2(r_V_2_reg_1094),
    .dout(grp_fu_861_p3)
);

Pool_mac_muladd_16ns_16s_48ns_48_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
Pool_mac_muladd_16ns_16s_48ns_48_1_U9(
    .din0(grp_fu_868_p0),
    .din1(w_V_reg_1112),
    .din2(r_V_2_reg_1094),
    .dout(grp_fu_868_p3)
);

Pool_mac_muladd_16ns_16s_48ns_48_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
Pool_mac_muladd_16ns_16s_48ns_48_1_U10(
    .din0(grp_fu_875_p0),
    .din1(w_V_reg_1112),
    .din2(r_V_2_reg_1094),
    .dout(grp_fu_875_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_2) & ~(((mode_V_read_reg_882 == ap_const_lv2_2) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)))) | ((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_1) & ~(((mode_V_read_reg_882 == ap_const_lv2_2) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)))) | ((1'b1 == ap_sig_cseq_ST_st43_fsm_42) & ~(1'b0 == ap_sig_ioackin_gmem_ARREADY)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_2) & (1'b1 == gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_1) & (1'b1 == gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (1'b1 == gmem_ARREADY)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st71_fsm_70)) begin
            if (~(1'b0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b0;
            end else if ((1'b1 == gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st72_fsm_71)) begin
            if (~(1'b0 == ap_sig_ioackin_gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b0;
            end else if ((1'b1 == gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        i_op_assign_1_reg_224 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st77_fsm_76) & ~(gmem_BVALID == 1'b0))) begin
        i_op_assign_1_reg_224 <= j_reg_1071;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & ~(1'b0 == exitcond4_fu_559_p2))) begin
        i_op_assign_2_reg_269 <= ii_reg_1079;
    end else if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond_fu_510_p2))) begin
        i_op_assign_2_reg_269 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        i_op_assign_3_reg_299 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & (1'b0 == exitcond4_fu_559_p2) & (mode_V_read_reg_882 == ap_const_lv2_3))) begin
        i_op_assign_3_reg_299 <= jj_fu_564_p2;
    end else if ((((mode_V_read_reg_882 == ap_const_lv2_2) & (1'b1 == ap_sig_cseq_ST_st41_fsm_40)) | ((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b1 == ap_sig_cseq_ST_st41_fsm_40)) | (1'b1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        i_op_assign_3_reg_299 <= jj_reg_1104;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & ~(1'b0 == exitcond4_fu_559_p2))) begin
        i_op_assign_reg_259 <= sum_3_reg_280;
    end else if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond_fu_510_p2))) begin
        i_op_assign_reg_259 <= p_sum_reg_1005;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond_fu_510_p2))) begin
        i_op_assign_s_reg_190 <= i_reg_1043;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (exitcond1_fu_455_p2 == 1'b0))) begin
        i_op_assign_s_reg_190 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == exitcond2_fu_480_p2))) begin
        op_assign_8_reg_179 <= c_reg_1018;
    end else if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~((1'b0 == grp_fu_376_ap_done) | (1'b0 == grp_fu_386_ap_done)))) begin
        op_assign_8_reg_179 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond_fu_510_p2))) begin
        phi_mul1_reg_201 <= next_mul2_reg_1035;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (exitcond1_fu_455_p2 == 1'b0))) begin
        phi_mul1_reg_201 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        phi_mul8_reg_247 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st77_fsm_76) & ~(gmem_BVALID == 1'b0))) begin
        phi_mul8_reg_247 <= next_mul9_reg_1058;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        r_V_10_reg_235 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st77_fsm_76) & ~(gmem_BVALID == 1'b0))) begin
        r_V_10_reg_235 <= next_mul_reg_1063;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond_fu_510_p2))) begin
        r_V_4_reg_213 <= next_mul1_reg_1030;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (exitcond1_fu_455_p2 == 1'b0))) begin
        r_V_4_reg_213 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        sum_3_reg_280 <= i_op_assign_reg_259;
    end else if (((mode_V_read_reg_882 == ap_const_lv2_2) & (1'b1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        sum_3_reg_280 <= sum_3_feature_in_load_2_fu_707_p3;
    end else if (((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        sum_3_reg_280 <= feature_in_load_1_sum_3_fu_798_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & (1'b0 == exitcond4_fu_559_p2) & (mode_V_read_reg_882 == ap_const_lv2_3))) begin
        sum_3_reg_280 <= sum_3_reg_280;
    end else if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        sum_3_reg_280 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (tmp_6_reg_972 == 1'b0) & ~(1'b0 == exitcond3_fu_521_p2))) begin
        sum_5_reg_316 <= i_op_assign_reg_259;
    end else if (((1'b1 == ap_sig_cseq_ST_st70_fsm_69) & ~(tmp_6_reg_972 == 1'b0))) begin
        sum_5_reg_316 <= grp_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        CHin_V_read_reg_909 <= CHin_V;
        Kx_V_read_reg_893 <= Kx_V;
        Ky_V_read_reg_888 <= Ky_V;
        Win_V_read_reg_898 <= Win_V;
        lhs_V_reg_926[7 : 0] <= lhs_V_fu_372_p1[7 : 0];
        mode_V_read_reg_882 <= mode_V;
        rhs_V_reg_933[7 : 0] <= rhs_V_fu_382_p1[7 : 0];
        tmp_3_reg_916 <= {{feature_out[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_5_reg_921 <= {{feature_in[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        c_reg_1018 <= c_fu_460_p2;
        i_op_assign_17_cast6_reg_1010[15 : 0] <= i_op_assign_17_cast6_fu_451_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        gmem_addr_1_reg_1151 <= feature_in2_sum6_cast_fu_818_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        gmem_addr_2_reg_1125 <= feature_in2_sum5_cast_fu_614_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((mode_V_read_reg_882 == ap_const_lv2_2) & (1'b1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        gmem_addr_3_reg_1119 <= feature_in2_sum_cast_fu_592_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        gmem_addr_reg_1167 <= feature_out4_sum_cast_fu_851_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        i_reg_1043 <= i_fu_485_p2;
        next_mul1_reg_1030 <= next_mul1_fu_470_p2;
        next_mul2_reg_1035 <= next_mul2_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        ii_reg_1079 <= ii_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        j_reg_1071 <= j_fu_515_p2;
        next_mul9_reg_1058 <= next_mul9_fu_500_p2;
        next_mul_reg_1063 <= next_mul_fu_505_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        jj_reg_1104 <= jj_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~((1'b0 == grp_fu_376_ap_done) | (1'b0 == grp_fu_386_ap_done)))) begin
        p_sum_reg_1005[5 : 2] <= p_sum_fu_443_p3[5 : 2];
p_sum_reg_1005[7] <= p_sum_fu_443_p3[7];
p_sum_reg_1005[9] <= p_sum_fu_443_p3[9];
p_sum_reg_1005[13] <= p_sum_fu_443_p3[13];
p_sum_reg_1005[16 : 15] <= p_sum_fu_443_p3[16 : 15];
p_sum_reg_1005[21 : 20] <= p_sum_fu_443_p3[21 : 20];
p_sum_reg_1005[25 : 23] <= p_sum_fu_443_p3[25 : 23];
p_sum_reg_1005[28 : 27] <= p_sum_fu_443_p3[28 : 27];
p_sum_reg_1005[31 : 30] <= p_sum_fu_443_p3[31 : 30];
        r_V_15_reg_962 <= grp_fu_376_p2;
        rhs_V_1_cast_reg_995[15 : 0] <= rhs_V_1_cast_fu_422_p1[15 : 0];
        rhs_V_1_reg_976[15 : 0] <= rhs_V_1_fu_416_p1[15 : 0];
        rhs_V_2_cast_reg_1000[15 : 0] <= rhs_V_2_cast_fu_426_p1[15 : 0];
        rhs_V_2_reg_985[15 : 0] <= rhs_V_2_fu_419_p1[15 : 0];
        tmp_1_reg_990 <= grp_fu_338_p1;
        tmp_31_cast_reg_950[29 : 0] <= tmp_31_cast_fu_400_p1[29 : 0];
        tmp_32_cast_reg_955[29 : 0] <= tmp_32_cast_fu_403_p1[29 : 0];
        tmp_4_reg_967 <= grp_fu_386_p2;
        tmp_6_reg_972 <= tmp_6_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        r_V_16_reg_940 <= r_V_16_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        r_V_1_reg_1053 <= grp_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        r_V_2_reg_1094 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond3_fu_521_p2))) begin
        r_V_reg_1084 <= r_V_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st39_fsm_38) & (mode_V_read_reg_882 == ap_const_lv2_2) & ~ap_sig_346) | ((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b1 == ap_sig_cseq_ST_st39_fsm_38) & ~ap_sig_346) | ((1'b1 == ap_sig_cseq_ST_st50_fsm_49) & ~(gmem_RVALID == 1'b0)))) begin
        reg_346 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (exitcond1_fu_455_p2 == 1'b0))) begin
        rhs_V_7_cast_reg_1023[15 : 0] <= rhs_V_7_cast_fu_466_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        tmp_17_reg_1136 <= grp_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((mode_V_read_reg_882 == ap_const_lv2_2) & (1'b1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        tmp_26_reg_1131 <= grp_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & (1'b0 == exitcond4_fu_559_p2))) begin
        w_V_reg_1112 <= w_V_fu_574_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(exitcond1_fu_455_p2 == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(exitcond1_fu_455_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_384) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_393) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_94) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_402) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_438) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_455) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_473) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_482) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_495) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_509) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_518) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_527) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_541) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_181) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_193) begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_554) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_566) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_579) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_166) begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_174) begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_716) begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_588) begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_597) begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_209) begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_217) begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_225) begin
        ap_sig_cseq_ST_st77_fsm_76 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_AWREADY)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_WREADY)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
            gmem_ARADDR = gmem_addr_1_reg_1151;
        end else if (ap_sig_187) begin
            gmem_ARADDR = gmem_addr_2_reg_1125;
        end else if (ap_sig_200) begin
            gmem_ARADDR = gmem_addr_3_reg_1119;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_2) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_1) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & (1'b0 == ap_reg_ioackin_gmem_AWREADY))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st77_fsm_76) & ~(gmem_BVALID == 1'b0))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st39_fsm_38) & (mode_V_read_reg_882 == ap_const_lv2_2) & ~ap_sig_346) | ((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b1 == ap_sig_cseq_ST_st39_fsm_38) & ~ap_sig_346) | ((1'b1 == ap_sig_cseq_ST_st50_fsm_49) & ~(gmem_RVALID == 1'b0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st72_fsm_71) & (1'b0 == ap_reg_ioackin_gmem_WREADY))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st43_fsm_42) | ((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_1)) | ((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_2)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st50_fsm_49) | ((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b1 == ap_sig_cseq_ST_st39_fsm_38)) | ((1'b1 == ap_sig_cseq_ST_st39_fsm_38) & (mode_V_read_reg_882 == ap_const_lv2_2)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        grp_fu_376_ap_start = 1'b1;
    end else begin
        grp_fu_376_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        grp_fu_386_ap_start = 1'b1;
    end else begin
        grp_fu_386_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            if (~((1'b0 == grp_fu_376_ap_done) | (1'b0 == grp_fu_386_ap_done))) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end
        end
        ap_ST_st21_fsm_20 : begin
            if (~(exitcond1_fu_455_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st22_fsm_21 : begin
            if ((1'b0 == exitcond2_fu_480_p2)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            if ((1'b0 == exitcond_fu_510_p2)) begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st26_fsm_25 : begin
            if (((tmp_6_reg_972 == 1'b0) & ~(1'b0 == exitcond3_fu_521_p2))) begin
                ap_NS_fsm = ap_ST_st70_fsm_69;
            end else if ((~(tmp_6_reg_972 == 1'b0) & ~(1'b0 == exitcond3_fu_521_p2))) begin
                ap_NS_fsm = ap_ST_st56_fsm_55;
            end else begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            if (((1'b0 == exitcond4_fu_559_p2) & (mode_V_read_reg_882 == ap_const_lv2_0))) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else if ((((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b0 == exitcond4_fu_559_p2)) | ((mode_V_read_reg_882 == ap_const_lv2_2) & (1'b0 == exitcond4_fu_559_p2)))) begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end else if (((1'b0 == exitcond4_fu_559_p2) & (mode_V_read_reg_882 == ap_const_lv2_3))) begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            if ((~(((mode_V_read_reg_882 == ap_const_lv2_2) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((mode_V_read_reg_882 == ap_const_lv2_1) & (1'b0 == ap_sig_ioackin_gmem_ARREADY))) & ((mode_V_read_reg_882 == ap_const_lv2_1) | (mode_V_read_reg_882 == ap_const_lv2_2)))) begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            if ((~ap_sig_346 & ((mode_V_read_reg_882 == ap_const_lv2_1) | (mode_V_read_reg_882 == ap_const_lv2_2)))) begin
                ap_NS_fsm = ap_ST_st40_fsm_39;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_38;
            end
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) begin
                ap_NS_fsm = ap_ST_st44_fsm_43;
            end else begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            if (~(gmem_RVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st51_fsm_50;
            end else begin
                ap_NS_fsm = ap_ST_st50_fsm_49;
            end
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_NS_fsm = ap_ST_st72_fsm_71;
            end else begin
                ap_NS_fsm = ap_ST_st71_fsm_70;
            end
        end
        ap_ST_st72_fsm_71 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_WREADY)) begin
                ap_NS_fsm = ap_ST_st73_fsm_72;
            end else begin
                ap_NS_fsm = ap_ST_st72_fsm_71;
            end
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : begin
            if (~(gmem_BVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st77_fsm_76;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_166 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_174 = (1'b1 == ap_CS_fsm[ap_const_lv32_31]);
end

always @ (*) begin
    ap_sig_181 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_187 = ((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_1));
end

always @ (*) begin
    ap_sig_193 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_200 = ((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (mode_V_read_reg_882 == ap_const_lv2_2));
end

always @ (*) begin
    ap_sig_209 = (1'b1 == ap_CS_fsm[ap_const_lv32_46]);
end

always @ (*) begin
    ap_sig_217 = (1'b1 == ap_CS_fsm[ap_const_lv32_47]);
end

always @ (*) begin
    ap_sig_225 = (1'b1 == ap_CS_fsm[ap_const_lv32_4C]);
end

always @ (*) begin
    ap_sig_346 = (((mode_V_read_reg_882 == ap_const_lv2_2) & (gmem_RVALID == 1'b0)) | ((mode_V_read_reg_882 == ap_const_lv2_1) & (gmem_RVALID == 1'b0)));
end

always @ (*) begin
    ap_sig_384 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_393 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_402 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_438 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_455 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_473 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_482 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_495 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_509 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_518 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_527 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_541 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_554 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_566 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_579 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_588 = (1'b1 == ap_CS_fsm[ap_const_lv32_36]);
end

always @ (*) begin
    ap_sig_597 = (1'b1 == ap_CS_fsm[ap_const_lv32_45]);
end

always @ (*) begin
    ap_sig_716 = (1'b1 == ap_CS_fsm[ap_const_lv32_32]);
end

always @ (*) begin
    ap_sig_94 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign c_fu_460_p2 = (op_assign_8_reg_179 + ap_const_lv16_1);

assign exitcond1_fu_455_p2 = ((op_assign_8_reg_179 == CHin_V_read_reg_909) ? 1'b1 : 1'b0);

assign exitcond2_fu_480_p2 = ((i_op_assign_s_reg_190 == tmp_4_reg_967) ? 1'b1 : 1'b0);

assign exitcond3_fu_521_p2 = ((i_op_assign_2_reg_269 == Ky_V_read_reg_888) ? 1'b1 : 1'b0);

assign exitcond4_fu_559_p2 = ((i_op_assign_3_reg_299 == Kx_V_read_reg_893) ? 1'b1 : 1'b0);

assign exitcond_fu_510_p2 = ((i_op_assign_1_reg_224 == r_V_15_reg_962) ? 1'b1 : 1'b0);

assign feature_in2_sum5_cast_fu_614_p1 = $signed(feature_in2_sum5_fu_609_p2);

assign feature_in2_sum5_fu_609_p2 = (tmp_32_cast_reg_955 + r_V_11_fu_605_p2);

assign feature_in2_sum6_cast_fu_818_p1 = $signed(feature_in2_sum6_fu_813_p2);

assign feature_in2_sum6_fu_813_p2 = (r_V_7_fu_809_p2 + tmp_32_cast_reg_955);

assign feature_in2_sum_cast_fu_592_p1 = $signed(feature_in2_sum_fu_587_p2);

assign feature_in2_sum_fu_587_p2 = (tmp_32_cast_reg_955 + r_V_14_fu_583_p2);

assign feature_in_load_1_sum_3_fu_798_p3 = ((tmp_18_fu_793_p2[0:0] === 1'b1) ? reg_346 : sum_3_reg_280);

assign feature_in_load_1_to_int_fu_733_p1 = reg_346;

assign feature_in_load_2_to_int_fu_642_p1 = reg_346;

assign feature_out4_sum_cast_fu_851_p1 = feature_out4_sum_fu_846_p2;

assign feature_out4_sum_fu_846_p2 = (tmp_17_cast_cast_fu_842_p1 + tmp_31_cast_reg_950);

assign grp_fu_338_p0 = r_V_16_reg_940;

assign grp_fu_376_p1 = grp_fu_376_p10;

assign grp_fu_376_p10 = Kx_V;

assign grp_fu_386_p1 = grp_fu_386_p10;

assign grp_fu_386_p10 = Ky_V;

assign grp_fu_495_p0 = grp_fu_495_p00;

assign grp_fu_495_p00 = r_V_4_reg_213;

assign grp_fu_495_p1 = rhs_V_2_cast_reg_1000;

assign grp_fu_554_p1 = rhs_V_2_reg_985;

assign grp_fu_861_p0 = rhs_V_1_reg_976;

assign grp_fu_868_p0 = rhs_V_1_reg_976;

assign grp_fu_875_p0 = rhs_V_1_reg_976;

assign h_V_fu_536_p2 = (tmp_8_fu_532_p1 + phi_mul1_reg_201);

assign i_fu_485_p2 = (i_op_assign_s_reg_190 + ap_const_lv16_1);

assign i_op_assign_17_cast6_fu_451_p1 = op_assign_8_reg_179;

assign ii_fu_526_p2 = (i_op_assign_2_reg_269 + ap_const_lv8_1);

assign j_fu_515_p2 = (i_op_assign_1_reg_224 + ap_const_lv16_1);

assign jj_fu_564_p2 = (i_op_assign_3_reg_299 + ap_const_lv8_1);

assign lhs_V_fu_372_p1 = Kx_V;

assign next_mul1_fu_470_p2 = (r_V_4_reg_213 + rhs_V_1_cast_reg_995);

assign next_mul2_fu_475_p2 = (phi_mul1_reg_201 + rhs_V_reg_933);

assign next_mul9_fu_500_p2 = (phi_mul8_reg_247 + lhs_V_reg_926);

assign next_mul_fu_505_p2 = (r_V_10_reg_235 + rhs_V_1_reg_976);

assign notlhs1_fu_751_p2 = ((tmp_fu_719_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_769_p2 = ((tmp_12_fu_737_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs8_fu_678_p2 = ((tmp_21_fu_646_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_660_p2 = ((tmp_19_fu_628_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs1_fu_757_p2 = ((tmp_11_fu_729_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_775_p2 = ((tmp_13_fu_747_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs9_fu_684_p2 = ((tmp_22_fu_656_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_666_p2 = ((tmp_20_fu_638_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_sum_fu_443_p3 = ((tmp_2_fu_437_p2[0:0] === 1'b1) ? sum_fu_429_p3 : ap_const_lv32_DBB1A2BC);

assign r_V_11_fu_605_p2 = ($signed(rhs_V_7_cast_reg_1023) + $signed(grp_fu_868_p3));

assign r_V_14_fu_583_p2 = ($signed(rhs_V_7_cast_reg_1023) + $signed(grp_fu_875_p3));

assign r_V_16_fu_392_p0 = rhs_V_reg_933;

assign r_V_16_fu_392_p1 = lhs_V_reg_926;

assign r_V_16_fu_392_p2 = (r_V_16_fu_392_p0 * r_V_16_fu_392_p1);

assign r_V_7_fu_809_p2 = ($signed(rhs_V_7_cast_reg_1023) + $signed(grp_fu_861_p3));

assign r_V_fu_546_p0 = h_V_fu_536_p2;

assign r_V_fu_546_p1 = rhs_V_1_reg_976;

assign r_V_fu_546_p2 = ($signed(r_V_fu_546_p0) * $signed({{1'b0}, {r_V_fu_546_p1}}));

assign rhs_V_1_cast_fu_422_p1 = grp_fu_376_p2;

assign rhs_V_1_fu_416_p1 = CHin_V_read_reg_909;

assign rhs_V_2_cast_fu_426_p1 = CHin_V_read_reg_909;

assign rhs_V_2_fu_419_p1 = Win_V_read_reg_898;

assign rhs_V_7_cast_fu_466_p1 = op_assign_8_reg_179;

assign rhs_V_fu_382_p1 = Ky_V;

assign sum_3_feature_in_load_2_fu_707_p3 = ((tmp_27_fu_702_p2[0:0] === 1'b1) ? sum_3_reg_280 : reg_346);

assign sum_3_to_int7_fu_624_p1 = sum_3_reg_280;

assign sum_3_to_int_fu_715_p1 = sum_3_reg_280;

assign sum_fu_429_p3 = ((tmp_6_fu_406_p2[0:0] === 1'b1) ? ap_const_lv32_0 : ap_const_lv32_5BB1A2BC);

assign tmp1_cast_fu_833_p1 = tmp1_fu_828_p2;

assign tmp1_fu_828_p2 = (i_op_assign_17_cast6_reg_1010 + r_V_10_reg_235);

assign tmp_10_fu_570_p1 = i_op_assign_3_reg_299;

assign tmp_11_fu_729_p1 = sum_3_to_int_fu_715_p1[22:0];

assign tmp_12_fu_737_p4 = {{feature_in_load_1_to_int_fu_733_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_13_fu_747_p1 = feature_in_load_1_to_int_fu_733_p1[22:0];

assign tmp_14_fu_763_p2 = (notrhs1_fu_757_p2 | notlhs1_fu_751_p2);

assign tmp_15_fu_781_p2 = (notrhs2_fu_775_p2 | notlhs2_fu_769_p2);

assign tmp_16_fu_787_p2 = (tmp_14_fu_763_p2 & tmp_15_fu_781_p2);

assign tmp_17_cast_cast_fu_842_p1 = tmp_9_fu_837_p2;

assign tmp_18_fu_793_p2 = (tmp_16_fu_787_p2 & tmp_17_reg_1136);

assign tmp_19_fu_628_p4 = {{sum_3_to_int7_fu_624_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_20_fu_638_p1 = sum_3_to_int7_fu_624_p1[22:0];

assign tmp_21_fu_646_p4 = {{feature_in_load_2_to_int_fu_642_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_22_fu_656_p1 = feature_in_load_2_to_int_fu_642_p1[22:0];

assign tmp_23_fu_672_p2 = (notrhs_fu_666_p2 | notlhs_fu_660_p2);

assign tmp_24_fu_690_p2 = (notrhs9_fu_684_p2 | notlhs8_fu_678_p2);

assign tmp_25_fu_696_p2 = (tmp_23_fu_672_p2 & tmp_24_fu_690_p2);

assign tmp_27_fu_702_p2 = (tmp_25_fu_696_p2 & tmp_26_reg_1131);

assign tmp_2_fu_437_p2 = (tmp_6_fu_406_p2 | tmp_7_fu_411_p2);

assign tmp_31_cast_fu_400_p1 = tmp_3_reg_916;

assign tmp_32_cast_fu_403_p1 = tmp_5_reg_921;

assign tmp_6_fu_406_p2 = ((mode_V_read_reg_882 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_7_fu_411_p2 = ((mode_V_read_reg_882 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign tmp_8_fu_532_p1 = i_op_assign_2_reg_269;

assign tmp_9_fu_837_p2 = (r_V_1_reg_1053 + tmp1_cast_fu_833_p1);

assign tmp_fu_719_p4 = {{sum_3_to_int_fu_715_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign w_V_fu_574_p2 = (phi_mul8_reg_247 + tmp_10_fu_570_p1);

always @ (posedge ap_clk) begin
    lhs_V_reg_926[15:8] <= 8'b00000000;
    rhs_V_reg_933[15:8] <= 8'b00000000;
    tmp_31_cast_reg_950[48:30] <= 19'b0000000000000000000;
    tmp_32_cast_reg_955[47:30] <= 18'b000000000000000000;
    rhs_V_1_reg_976[31:16] <= 16'b0000000000000000;
    rhs_V_2_reg_985[47:16] <= 32'b00000000000000000000000000000000;
    rhs_V_1_cast_reg_995[31:16] <= 16'b0000000000000000;
    rhs_V_2_cast_reg_1000[47:16] <= 32'b00000000000000000000000000000000;
    p_sum_reg_1005[1:0] <= 2'b00;
    p_sum_reg_1005[6:6] <= 1'b0;
    p_sum_reg_1005[8:8] <= 1'b0;
    p_sum_reg_1005[12:10] <= 3'b000;
    p_sum_reg_1005[14:14] <= 1'b0;
    p_sum_reg_1005[19:17] <= 3'b000;
    p_sum_reg_1005[22:22] <= 1'b0;
    p_sum_reg_1005[26:26] <= 1'b0;
    p_sum_reg_1005[29] <= 1'b0;
    i_op_assign_17_cast6_reg_1010[31:16] <= 16'b0000000000000000;
    rhs_V_7_cast_reg_1023[47:16] <= 32'b00000000000000000000000000000000;
end

endmodule //Pool
