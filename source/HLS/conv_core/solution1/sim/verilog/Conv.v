// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=15,HLS_SYN_FF=3394,HLS_SYN_LUT=3913}" *)

module Conv (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 75'b1;
parameter    ap_ST_st2_fsm_1 = 75'b10;
parameter    ap_ST_st3_fsm_2 = 75'b100;
parameter    ap_ST_st4_fsm_3 = 75'b1000;
parameter    ap_ST_st5_fsm_4 = 75'b10000;
parameter    ap_ST_st6_fsm_5 = 75'b100000;
parameter    ap_ST_st7_fsm_6 = 75'b1000000;
parameter    ap_ST_st8_fsm_7 = 75'b10000000;
parameter    ap_ST_st9_fsm_8 = 75'b100000000;
parameter    ap_ST_st10_fsm_9 = 75'b1000000000;
parameter    ap_ST_st11_fsm_10 = 75'b10000000000;
parameter    ap_ST_st12_fsm_11 = 75'b100000000000;
parameter    ap_ST_st13_fsm_12 = 75'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 75'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 75'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 75'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 75'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 75'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 75'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 75'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 75'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 75'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 75'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 75'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 75'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 75'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 75'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 75'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 75'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 75'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 75'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 75'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 75'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 75'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 75'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 75'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 75'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 75'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 75'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 75'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 75'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 75'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 75'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 75'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 75'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 75'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 75'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 75'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 75'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 75'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 75'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 75'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 75'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 75'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 75'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 75'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 75'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 75'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 75'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 75'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 75'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 75'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 75'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 75'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 75'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 75'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 75'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 75'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 75'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 75'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 75'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 75'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 75'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 75'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 75'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_4 = 5'b100;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (C_M_AXI_GMEM_DATA_WIDTH / ap_const_int64_8);
parameter C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1 : 0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1 : 0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1 : 0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1 : 0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1 : 0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1 : 0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_92;
reg    ap_ready;
wire   [15:0] CHin_V;
wire   [15:0] Hin_V;
wire   [15:0] Win_V;
wire   [15:0] CHout_V;
wire   [7:0] Kx_V;
wire   [7:0] Ky_V;
wire   [7:0] Sx_V;
wire   [7:0] Sy_V;
wire   [0:0] mode_V;
wire   [0:0] relu_en_V;
wire   [31:0] feature_in;
wire   [31:0] W;
wire   [31:0] bias;
wire   [31:0] feature_out;
reg    gmem_blk_n_AR;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_170;
wire   [0:0] exitcond3_fu_882_p2;
reg    gmem_blk_n_R;
reg    ap_sig_cseq_ST_st63_fsm_62;
reg    ap_sig_183;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_190;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_198;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_206;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_214;
reg    gmem_blk_n_AW;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_223;
reg    gmem_blk_n_W;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_231;
reg    gmem_blk_n_B;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_239;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [31:0] reg_446;
reg   [0:0] relu_en_V_read_reg_1186;
reg   [7:0] Sy_V_read_reg_1191;
reg   [7:0] Sx_V_read_reg_1197;
reg   [7:0] Ky_V_read_reg_1203;
reg   [7:0] Kx_V_read_reg_1209;
reg   [15:0] CHout_V_read_reg_1216;
reg   [15:0] Win_V_read_reg_1223;
reg   [15:0] CHin_V_read_reg_1228;
reg   [29:0] tmp_1_reg_1235;
reg   [29:0] tmp_5_reg_1240;
reg   [29:0] tmp_15_reg_1245;
reg   [29:0] tmp_16_reg_1250;
wire   [7:0] p_1_fu_608_p3;
reg   [7:0] p_1_reg_1255;
wire   [7:0] p_2_fu_616_p3;
reg   [7:0] p_2_reg_1260;
wire   [16:0] lhs_V_2_cast_fu_636_p1;
reg   [16:0] lhs_V_2_cast_reg_1265;
wire   [16:0] r_V_3_fu_640_p2;
reg   [16:0] r_V_3_reg_1270;
wire   [16:0] lhs_V_4_cast_fu_658_p1;
reg   [16:0] lhs_V_4_cast_reg_1275;
wire   [16:0] r_V_7_fu_662_p2;
reg   [16:0] r_V_7_reg_1280;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_407;
wire   [48:0] tmp_29_cast_fu_718_p1;
reg   [48:0] tmp_29_cast_reg_1305;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_422;
wire    grp_fu_687_ap_done;
wire    grp_fu_712_ap_done;
wire   [30:0] tmp_30_cast_fu_721_p1;
reg   [30:0] tmp_30_cast_reg_1310;
wire   [48:0] tmp_33_cast_fu_724_p1;
reg   [48:0] tmp_33_cast_reg_1315;
wire   [47:0] tmp_35_cast_fu_727_p1;
reg   [47:0] tmp_35_cast_reg_1320;
wire   [15:0] Wout_V_fu_734_p2;
reg   [15:0] Wout_V_reg_1325;
wire   [15:0] tmp_7_fu_744_p2;
reg   [15:0] tmp_7_reg_1330;
wire   [15:0] tmp_9_fu_750_p1;
reg   [15:0] tmp_9_reg_1335;
wire   [15:0] tmp_s_fu_753_p1;
reg   [15:0] tmp_s_reg_1340;
wire   [15:0] tmp_10_fu_756_p1;
reg   [15:0] tmp_10_reg_1345;
wire   [15:0] tmp_11_fu_759_p1;
reg   [15:0] tmp_11_reg_1350;
wire   [31:0] rhs_V_1_fu_762_p1;
reg   [31:0] rhs_V_1_reg_1355;
wire   [47:0] rhs_V_2_fu_765_p1;
reg   [47:0] rhs_V_2_reg_1362;
wire   [15:0] rhs_V_1_cast_fu_768_p1;
reg   [15:0] rhs_V_1_cast_reg_1367;
wire   [47:0] rhs_V_8_cast_fu_771_p1;
reg   [47:0] rhs_V_8_cast_reg_1372;
wire   [23:0] rhs_V_10_cast_fu_774_p1;
reg   [23:0] rhs_V_10_cast_reg_1378;
wire   [31:0] rhs_V_9_cast_fu_777_p1;
reg   [31:0] rhs_V_9_cast_reg_1383;
wire   [31:0] rhs_V_7_cast_fu_780_p1;
reg   [31:0] rhs_V_7_cast_reg_1389;
wire   [15:0] cout_fu_789_p2;
reg   [15:0] cout_reg_1397;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_470;
wire   [31:0] tmp_17_cast_fu_799_p1;
reg   [31:0] tmp_17_cast_reg_1402;
wire   [0:0] exitcond1_fu_784_p2;
reg   [31:0] gmem_addr_reg_1408;
wire   [15:0] next_mul1_fu_818_p2;
reg   [15:0] next_mul1_reg_1414;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_486;
wire   [15:0] i_fu_832_p2;
reg   [15:0] i_reg_1422;
wire   [15:0] tmp_17_fu_838_p2;
reg   [15:0] tmp_17_reg_1427;
wire   [0:0] exitcond2_fu_827_p2;
wire   [31:0] r_V_10_fu_1170_p2;
reg   [31:0] r_V_10_reg_1432;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_504;
wire   [47:0] grp_fu_846_p2;
reg   [47:0] r_V_5_reg_1442;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_513;
wire   [15:0] next_mul2_fu_851_p2;
reg   [15:0] next_mul2_reg_1447;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_522;
wire   [31:0] next_mul3_fu_856_p2;
reg   [31:0] next_mul3_reg_1452;
wire   [15:0] j_fu_866_p2;
reg   [15:0] j_reg_1460;
wire   [15:0] tmp_19_fu_872_p2;
reg   [15:0] tmp_19_reg_1465;
wire   [0:0] exitcond_fu_861_p2;
wire   [15:0] next_mul4_fu_877_p2;
reg   [15:0] next_mul4_reg_1470;
reg    ap_sig_ioackin_gmem_ARREADY;
wire   [7:0] ii_fu_887_p2;
reg   [7:0] ii_reg_1478;
wire  signed [15:0] h_V_fu_897_p2;
reg   [15:0] h_V_reg_1483;
wire  signed [31:0] r_V_16_fu_1175_p2;
reg  signed [31:0] r_V_16_reg_1488;
wire   [0:0] slt_fu_910_p2;
reg   [0:0] slt_reg_1493;
reg   [31:0] gmem_addr_1_reg_1498;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_559;
wire   [47:0] grp_fu_951_p2;
reg   [47:0] r_V_12_reg_1508;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_568;
wire   [31:0] r_V_13_fu_1165_p2;
reg   [31:0] r_V_13_reg_1513;
wire   [0:0] rev_fu_960_p2;
reg   [0:0] rev_reg_1518;
wire   [23:0] next_mul5_fu_965_p2;
reg   [23:0] next_mul5_reg_1523;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_581;
wire   [7:0] jj_fu_975_p2;
reg   [7:0] jj_reg_1533;
wire  signed [47:0] grp_fu_1180_p3;
reg  signed [47:0] r_V_15_reg_1546;
wire   [0:0] exitcond4_fu_970_p2;
wire   [0:0] brmerge_fu_1003_p2;
wire   [0:0] tmp_28_fu_1016_p2;
wire   [47:0] grp_fu_1034_p2;
reg   [47:0] tmp1_reg_1556;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_606;
wire   [15:0] cin_fu_1044_p2;
reg   [15:0] cin_reg_1564;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_615;
reg   [31:0] gmem_addr_2_reg_1569;
wire   [0:0] exitcond5_fu_1039_p2;
wire   [31:0] next_mul_fu_1074_p2;
reg   [31:0] next_mul_reg_1575;
reg   [31:0] gmem_addr_3_reg_1580;
reg   [31:0] gmem_addr_3_read_reg_1586;
wire   [31:0] grp_fu_437_p2;
reg   [31:0] tp_reg_1591;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_635;
wire   [31:0] grp_fu_431_p2;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_644;
reg   [31:0] sum_3_reg_1601;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_652;
wire   [31:0] p_s_fu_1158_p3;
reg   [31:0] p_s_reg_1608;
reg    ap_sig_ioackin_gmem_AWREADY;
reg   [15:0] i_op_assign_s_reg_247;
reg   [15:0] i_op_assign_1_reg_258;
reg   [15:0] phi_mul1_reg_269;
reg   [15:0] i_op_assign_2_reg_280;
reg   [31:0] r_V_11_reg_291;
reg   [15:0] phi_mul3_reg_303;
reg   [31:0] sum_reg_314;
reg   [7:0] i_op_assign_3_reg_326;
reg   [15:0] r_V_18_reg_337;
reg   [31:0] sum_1_reg_349;
reg   [7:0] i_op_assign_5_reg_367;
reg   [23:0] r_V_19_reg_382;
reg   [31:0] sum_2_reg_397;
reg   [15:0] i_op_assign_reg_409;
reg   [31:0] r_V_20_reg_420;
wire   [63:0] bias6_sum_cast_fu_808_p1;
wire   [63:0] feature_out8_sum_cast_fu_938_p1;
wire  signed [63:0] feature_in2_sum9_cast_fu_1064_p1;
wire   [63:0] W4_sum_cast_fu_1102_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_reg_ioackin_gmem_WREADY;
reg    ap_sig_ioackin_gmem_WREADY;
reg   [31:0] grp_fu_431_p0;
reg   [31:0] grp_fu_431_p1;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_769;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_776;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_785;
wire   [8:0] lhs_V_cast_fu_492_p1;
wire   [8:0] r_V_fu_496_p2;
wire   [8:0] p_neg4_fu_510_p2;
wire   [7:0] tmp_2_fu_516_p4;
wire   [0:0] tmp_18_fu_502_p3;
wire   [7:0] tmp_3_fu_526_p2;
wire   [7:0] tmp_6_fu_532_p4;
wire   [8:0] lhs_V_1_cast_fu_550_p1;
wire   [8:0] r_V_1_fu_554_p2;
wire   [8:0] p_neg_fu_568_p2;
wire   [7:0] tmp_4_fu_574_p4;
wire   [0:0] tmp_21_fu_560_p3;
wire   [7:0] tmp_8_fu_584_p2;
wire   [7:0] tmp_12_fu_590_p4;
wire   [7:0] pad_x_V_fu_542_p3;
wire   [7:0] pad_y_V_fu_600_p3;
wire   [8:0] r_V_2_fu_624_p3;
wire   [16:0] r_V_2_cast_fu_632_p1;
wire   [8:0] r_V_6_fu_646_p3;
wire   [16:0] r_V_6_cast_fu_654_p1;
wire   [17:0] r_V_3_cast_fu_668_p1;
wire   [17:0] rhs_V_2_cast_fu_671_p1;
wire   [17:0] r_V_4_fu_674_p2;
wire  signed [18:0] grp_fu_687_p0;
wire   [8:0] grp_fu_687_p1;
wire   [17:0] r_V_7_cast_fu_693_p1;
wire   [17:0] rhs_V_5_cast_fu_696_p1;
wire   [17:0] r_V_8_fu_699_p2;
wire  signed [18:0] grp_fu_712_p0;
wire   [8:0] grp_fu_712_p1;
wire   [18:0] grp_fu_687_p2;
wire   [15:0] tmp_29_fu_730_p1;
wire   [18:0] grp_fu_712_p2;
wire   [15:0] tmp_30_fu_740_p1;
wire   [30:0] tmp_15_cast_fu_795_p1;
wire   [30:0] bias6_sum_fu_803_p2;
wire   [31:0] grp_fu_846_p0;
wire   [15:0] grp_fu_846_p1;
wire   [15:0] tmp_25_fu_893_p1;
wire  signed [16:0] lhs_V_15_cast_fu_906_p1;
wire   [31:0] tmp3_fu_915_p2;
wire   [47:0] tmp3_cast_fu_920_p1;
wire   [47:0] tmp_24_fu_924_p2;
wire   [48:0] tmp_26_cast_cast_fu_929_p1;
wire   [48:0] feature_out8_sum_fu_933_p2;
wire   [15:0] grp_fu_951_p1;
wire   [15:0] tmp_26_fu_981_p1;
wire  signed [15:0] w_V_fu_985_p2;
wire   [15:0] tmp_27_fu_990_p2;
wire   [0:0] tmp_32_fu_995_p3;
wire  signed [16:0] lhs_V_11_cast_fu_1012_p1;
wire   [31:0] lhs_V_14_cast_fu_1021_p1;
(* use_dsp48 = "no" *) wire   [31:0] tmp_fu_1025_p2;
wire   [31:0] grp_fu_1034_p0;
wire   [15:0] grp_fu_1034_p1;
wire   [47:0] rhs_V_14_cast_fu_1050_p1;
(* use_dsp48 = "no" *) wire   [47:0] r_V_17_fu_1054_p2;
wire   [47:0] feature_in2_sum9_fu_1059_p2;
wire   [31:0] tmp2_fu_1079_p2;
wire   [47:0] tmp2_cast_fu_1084_p1;
wire   [47:0] tmp_33_fu_1088_p2;
wire   [48:0] tmp_36_cast_cast_fu_1093_p1;
wire   [48:0] W4_sum_fu_1097_p2;
wire   [31:0] sum_4_to_int_fu_1112_p1;
wire   [7:0] tmp_20_fu_1115_p4;
wire   [22:0] tmp_31_fu_1125_p1;
wire   [0:0] notrhs_fu_1135_p2;
wire   [0:0] notlhs_fu_1129_p2;
wire   [0:0] tmp_22_fu_1141_p2;
wire   [0:0] tmp_23_fu_441_p2;
wire   [0:0] rhs_V_fu_1147_p2;
wire   [0:0] r_V_9_fu_1153_p2;
wire   [15:0] r_V_13_fu_1165_p0;
wire   [15:0] r_V_13_fu_1165_p1;
wire   [15:0] r_V_10_fu_1170_p0;
wire   [15:0] r_V_10_fu_1170_p1;
wire   [15:0] r_V_16_fu_1175_p0;
wire   [15:0] grp_fu_1180_p0;
reg    grp_fu_687_ap_start;
reg    grp_fu_712_ap_start;
reg   [74:0] ap_NS_fsm;
wire   [47:0] grp_fu_1034_p00;
wire   [18:0] grp_fu_687_p10;
wire   [18:0] grp_fu_712_p10;
wire   [47:0] grp_fu_846_p00;
wire   [31:0] r_V_10_fu_1170_p00;
wire   [31:0] r_V_13_fu_1165_p00;
reg    ap_sig_177;

// power-on initialization
initial begin
#0 ap_CS_fsm = 75'b1;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

Conv_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Conv_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .CHin_V(CHin_V),
    .Hin_V(Hin_V),
    .Win_V(Win_V),
    .CHout_V(CHout_V),
    .Kx_V(Kx_V),
    .Ky_V(Ky_V),
    .Sx_V(Sx_V),
    .Sy_V(Sy_V),
    .mode_V(mode_V),
    .relu_en_V(relu_en_V),
    .feature_in(feature_in),
    .W(W),
    .bias(bias),
    .feature_out(feature_out)
);

Conv_gmem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
Conv_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'b0),
    .I_ARLEN(ap_const_lv32_1),
    .I_ARSIZE(ap_const_lv3_0),
    .I_ARLOCK(ap_const_lv2_0),
    .I_ARCACHE(ap_const_lv4_0),
    .I_ARQOS(ap_const_lv4_0),
    .I_ARPROT(ap_const_lv3_0),
    .I_ARUSER(1'b0),
    .I_ARBURST(ap_const_lv2_0),
    .I_ARREGION(ap_const_lv4_0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_1_reg_1498),
    .I_AWID(1'b0),
    .I_AWLEN(ap_const_lv32_1),
    .I_AWSIZE(ap_const_lv3_0),
    .I_AWLOCK(ap_const_lv2_0),
    .I_AWCACHE(ap_const_lv4_0),
    .I_AWQOS(ap_const_lv4_0),
    .I_AWPROT(ap_const_lv3_0),
    .I_AWUSER(1'b0),
    .I_AWBURST(ap_const_lv2_0),
    .I_AWREGION(ap_const_lv4_0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(p_s_reg_1608),
    .I_WID(1'b0),
    .I_WUSER(1'b0),
    .I_WLAST(1'b0),
    .I_WSTRB(ap_const_lv4_F),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

Conv_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_fadd_32ns_32ns_32_5_full_dsp_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_431_p0),
    .din1(grp_fu_431_p1),
    .ce(1'b1),
    .dout(grp_fu_431_p2)
);

Conv_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_fmul_32ns_32ns_32_4_max_dsp_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_446),
    .din1(gmem_addr_3_read_reg_1586),
    .ce(1'b1),
    .dout(grp_fu_437_p2)
);

Conv_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
Conv_fcmp_32ns_32ns_1_1_U2(
    .din0(sum_3_reg_1601),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_4),
    .dout(tmp_23_fu_441_p2)
);

Conv_sdiv_19s_9ns_19_23_seq #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
Conv_sdiv_19s_9ns_19_23_seq_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_687_ap_start),
    .done(grp_fu_687_ap_done),
    .din0(grp_fu_687_p0),
    .din1(grp_fu_687_p1),
    .ce(1'b1),
    .dout(grp_fu_687_p2)
);

Conv_sdiv_19s_9ns_19_23_seq #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 19 ))
Conv_sdiv_19s_9ns_19_23_seq_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_712_ap_start),
    .done(grp_fu_712_ap_done),
    .din0(grp_fu_712_p0),
    .din1(grp_fu_712_p1),
    .ce(1'b1),
    .dout(grp_fu_712_p2)
);

Conv_mul_32ns_16ns_48_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
Conv_mul_32ns_16ns_48_3_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_846_p0),
    .din1(grp_fu_846_p1),
    .ce(1'b1),
    .dout(grp_fu_846_p2)
);

Conv_mul_32s_16ns_48_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
Conv_mul_32s_16ns_48_3_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(r_V_16_reg_1488),
    .din1(grp_fu_951_p1),
    .ce(1'b1),
    .dout(grp_fu_951_p2)
);

Conv_mul_32ns_16ns_48_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 48 ))
Conv_mul_32ns_16ns_48_3_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1034_p0),
    .din1(grp_fu_1034_p1),
    .ce(1'b1),
    .dout(grp_fu_1034_p2)
);

Conv_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16ns_16ns_32_1_U8(
    .din0(r_V_13_fu_1165_p0),
    .din1(r_V_13_fu_1165_p1),
    .dout(r_V_13_fu_1165_p2)
);

Conv_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16ns_16ns_32_1_U9(
    .din0(r_V_10_fu_1170_p0),
    .din1(r_V_10_fu_1170_p1),
    .dout(r_V_10_fu_1170_p2)
);

Conv_mul_mul_16ns_16s_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16ns_16s_32_1_U10(
    .din0(r_V_16_fu_1175_p0),
    .din1(h_V_fu_897_p2),
    .dout(r_V_16_fu_1175_p2)
);

Conv_mac_muladd_16ns_16s_48ns_48_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 48 ),
    .dout_WIDTH( 48 ))
Conv_mac_muladd_16ns_16s_48ns_48_1_U11(
    .din0(grp_fu_1180_p0),
    .din1(w_V_fu_985_p2),
    .din2(r_V_12_reg_1508),
    .dout(grp_fu_1180_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(exitcond3_fu_882_p2 == 1'b0) & ~(~(exitcond3_fu_882_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY))) | ((1'b1 == ap_sig_cseq_ST_st39_fsm_38) & ~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st40_fsm_39) & ~(1'b0 == ap_sig_ioackin_gmem_ARREADY)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(exitcond3_fu_882_p2 == 1'b0) & (1'b1 == gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st39_fsm_38) & (1'b1 == gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st40_fsm_39) & (1'b1 == gmem_ARREADY)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
            if (~(1'b0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b0;
            end else if ((1'b1 == gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
            if (~(1'b0 == ap_sig_ioackin_gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b0;
            end else if ((1'b1 == gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & ~(1'b0 == exitcond_fu_861_p2))) begin
        i_op_assign_1_reg_258 <= i_reg_1422;
    end else if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond1_fu_784_p2))) begin
        i_op_assign_1_reg_258 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        i_op_assign_2_reg_280 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st75_fsm_74) & ~(gmem_BVALID == 1'b0))) begin
        i_op_assign_2_reg_280 <= j_reg_1460;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & ~(1'b0 == exitcond4_fu_970_p2))) begin
        i_op_assign_3_reg_326 <= ii_reg_1478;
    end else if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & (1'b0 == exitcond_fu_861_p2))) begin
        i_op_assign_3_reg_326 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & (1'b0 == exitcond4_fu_970_p2) & ~(1'b0 == brmerge_fu_1003_p2)) | ((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & (1'b0 == exitcond4_fu_970_p2) & (1'b0 == brmerge_fu_1003_p2) & (1'b0 == tmp_28_fu_1016_p2)))) begin
        i_op_assign_5_reg_367 <= jj_fu_975_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st38_fsm_37) & ~(1'b0 == exitcond5_fu_1039_p2))) begin
        i_op_assign_5_reg_367 <= jj_reg_1533;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        i_op_assign_5_reg_367 <= ap_const_lv8_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        i_op_assign_reg_409 <= ap_const_lv16_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        i_op_assign_reg_409 <= cin_reg_1564;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & ~(1'b0 == exitcond2_fu_827_p2))) begin
        i_op_assign_s_reg_247 <= cout_reg_1397;
    end else if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & ~((1'b0 == grp_fu_687_ap_done) | (1'b0 == grp_fu_712_ap_done)))) begin
        i_op_assign_s_reg_247 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & ~(1'b0 == exitcond_fu_861_p2))) begin
        phi_mul1_reg_269 <= next_mul1_reg_1414;
    end else if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond1_fu_784_p2))) begin
        phi_mul1_reg_269 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        phi_mul3_reg_303 <= ap_const_lv16_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st75_fsm_74) & ~(gmem_BVALID == 1'b0))) begin
        phi_mul3_reg_303 <= next_mul2_reg_1447;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        r_V_11_reg_291 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st75_fsm_74) & ~(gmem_BVALID == 1'b0))) begin
        r_V_11_reg_291 <= next_mul3_reg_1452;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & ~(1'b0 == exitcond4_fu_970_p2))) begin
        r_V_18_reg_337 <= next_mul4_reg_1470;
    end else if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & (1'b0 == exitcond_fu_861_p2))) begin
        r_V_18_reg_337 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & (1'b0 == exitcond4_fu_970_p2) & ~(1'b0 == brmerge_fu_1003_p2)) | ((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & (1'b0 == exitcond4_fu_970_p2) & (1'b0 == brmerge_fu_1003_p2) & (1'b0 == tmp_28_fu_1016_p2)))) begin
        r_V_19_reg_382 <= next_mul5_fu_965_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st38_fsm_37) & ~(1'b0 == exitcond5_fu_1039_p2))) begin
        r_V_19_reg_382 <= next_mul5_reg_1523;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        r_V_19_reg_382 <= ap_const_lv24_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        r_V_20_reg_420 <= ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        r_V_20_reg_420 <= next_mul_reg_1575;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st38_fsm_37) & ~(1'b0 == exitcond5_fu_1039_p2))) begin
        sum_1_reg_349 <= sum_2_reg_397;
    end else if ((((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & (1'b0 == exitcond4_fu_970_p2) & ~(1'b0 == brmerge_fu_1003_p2)) | ((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & (1'b0 == exitcond4_fu_970_p2) & (1'b0 == brmerge_fu_1003_p2) & (1'b0 == tmp_28_fu_1016_p2)))) begin
        sum_1_reg_349 <= sum_1_reg_349;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        sum_1_reg_349 <= sum_reg_314;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        sum_2_reg_397 <= sum_1_reg_349;
    end else if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        sum_2_reg_397 <= grp_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & ~(1'b0 == exitcond4_fu_970_p2))) begin
        sum_reg_314 <= sum_1_reg_349;
    end else if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & (1'b0 == exitcond_fu_861_p2))) begin
        sum_reg_314 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        CHin_V_read_reg_1228 <= CHin_V;
        CHout_V_read_reg_1216 <= CHout_V;
        Kx_V_read_reg_1209 <= Kx_V;
        Ky_V_read_reg_1203 <= Ky_V;
        Sx_V_read_reg_1197 <= Sx_V;
        Sy_V_read_reg_1191 <= Sy_V;
        Win_V_read_reg_1223 <= Win_V;
        lhs_V_2_cast_reg_1265[15 : 0] <= lhs_V_2_cast_fu_636_p1[15 : 0];
        lhs_V_4_cast_reg_1275[15 : 0] <= lhs_V_4_cast_fu_658_p1[15 : 0];
        p_1_reg_1255 <= p_1_fu_608_p3;
        p_2_reg_1260 <= p_2_fu_616_p3;
        r_V_3_reg_1270 <= r_V_3_fu_640_p2;
        r_V_7_reg_1280 <= r_V_7_fu_662_p2;
        relu_en_V_read_reg_1186 <= relu_en_V;
        tmp_15_reg_1245 <= {{W[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_16_reg_1250 <= {{feature_in[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_1_reg_1235 <= {{feature_out[ap_const_lv32_1F : ap_const_lv32_2]}};
        tmp_5_reg_1240 <= {{bias[ap_const_lv32_1F : ap_const_lv32_2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & ~((1'b0 == grp_fu_687_ap_done) | (1'b0 == grp_fu_712_ap_done)))) begin
        Wout_V_reg_1325 <= Wout_V_fu_734_p2;
        rhs_V_10_cast_reg_1378[15 : 0] <= rhs_V_10_cast_fu_774_p1[15 : 0];
        rhs_V_1_cast_reg_1367[7 : 0] <= rhs_V_1_cast_fu_768_p1[7 : 0];
        rhs_V_1_reg_1355[15 : 0] <= rhs_V_1_fu_762_p1[15 : 0];
        rhs_V_2_reg_1362[15 : 0] <= rhs_V_2_fu_765_p1[15 : 0];
        rhs_V_7_cast_reg_1389[15 : 0] <= rhs_V_7_cast_fu_780_p1[15 : 0];
        rhs_V_8_cast_reg_1372[15 : 0] <= rhs_V_8_cast_fu_771_p1[15 : 0];
        rhs_V_9_cast_reg_1383[15 : 0] <= rhs_V_9_cast_fu_777_p1[15 : 0];
        tmp_10_reg_1345[7 : 0] <= tmp_10_fu_756_p1[7 : 0];
        tmp_11_reg_1350[7 : 0] <= tmp_11_fu_759_p1[7 : 0];
        tmp_29_cast_reg_1305[29 : 0] <= tmp_29_cast_fu_718_p1[29 : 0];
        tmp_30_cast_reg_1310[29 : 0] <= tmp_30_cast_fu_721_p1[29 : 0];
        tmp_33_cast_reg_1315[29 : 0] <= tmp_33_cast_fu_724_p1[29 : 0];
        tmp_35_cast_reg_1320[29 : 0] <= tmp_35_cast_fu_727_p1[29 : 0];
        tmp_7_reg_1330 <= tmp_7_fu_744_p2;
        tmp_9_reg_1335[7 : 0] <= tmp_9_fu_750_p1[7 : 0];
        tmp_s_reg_1340[7 : 0] <= tmp_s_fu_753_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        cin_reg_1564 <= cin_fu_1044_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        cout_reg_1397 <= cout_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(exitcond3_fu_882_p2 == 1'b0) & ~(~(exitcond3_fu_882_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)))) begin
        gmem_addr_1_reg_1498 <= feature_out8_sum_cast_fu_938_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st38_fsm_37) & (1'b0 == exitcond5_fu_1039_p2))) begin
        gmem_addr_2_reg_1569 <= feature_in2_sum9_cast_fu_1064_p1;
        gmem_addr_3_reg_1580 <= W4_sum_cast_fu_1102_p1;
        next_mul_reg_1575 <= next_mul_fu_1074_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(gmem_RVALID == 1'b0))) begin
        gmem_addr_3_read_reg_1586 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond1_fu_784_p2))) begin
        gmem_addr_reg_1408[30 : 0] <= bias6_sum_cast_fu_808_p1[30 : 0];
        tmp_17_cast_reg_1402[15 : 0] <= tmp_17_cast_fu_799_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & (exitcond3_fu_882_p2 == 1'b0) & ~(~(exitcond3_fu_882_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)))) begin
        h_V_reg_1483 <= h_V_fu_897_p2;
        r_V_16_reg_1488 <= r_V_16_fu_1175_p2;
        slt_reg_1493 <= slt_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        i_reg_1422 <= i_fu_832_p2;
        next_mul1_reg_1414 <= next_mul1_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(~(exitcond3_fu_882_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)))) begin
        ii_reg_1478 <= ii_fu_887_p2;
        next_mul4_reg_1470 <= next_mul4_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        j_reg_1460 <= j_fu_866_p2;
        next_mul2_reg_1447 <= next_mul2_fu_851_p2;
        next_mul3_reg_1452 <= next_mul3_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        jj_reg_1533 <= jj_fu_975_p2;
        next_mul5_reg_1523 <= next_mul5_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st69_fsm_68) & ~(1'b0 == ap_sig_ioackin_gmem_AWREADY))) begin
        p_s_reg_1608 <= p_s_fu_1158_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond2_fu_827_p2))) begin
        r_V_10_reg_1432 <= r_V_10_fu_1170_p2;
        tmp_17_reg_1427 <= tmp_17_fu_838_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        r_V_12_reg_1508 <= grp_fu_951_p2;
        r_V_13_reg_1513 <= r_V_13_fu_1165_p2;
        rev_reg_1518 <= rev_fu_960_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & (1'b0 == exitcond4_fu_970_p2) & (1'b0 == brmerge_fu_1003_p2) & ~(1'b0 == tmp_28_fu_1016_p2))) begin
        r_V_15_reg_1546 <= grp_fu_1180_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        r_V_5_reg_1442 <= grp_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(gmem_RVALID == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st63_fsm_62) & ~(gmem_RVALID == 1'b0)))) begin
        reg_446 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st68_fsm_67)) begin
        sum_3_reg_1601 <= grp_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        tmp1_reg_1556 <= grp_fu_1034_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) & (1'b0 == exitcond_fu_861_p2))) begin
        tmp_19_reg_1465 <= tmp_19_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        tp_reg_1591 <= grp_fu_437_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond1_fu_784_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond1_fu_784_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_92) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_422) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_470) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_486) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_504) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_513) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_407) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_522) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_170) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_559) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_568) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_581) begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_606) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_615) begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_190) begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_206) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_198) begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_214) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_785) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_635) begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_769) begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_644) begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_183) begin
        ap_sig_cseq_ST_st63_fsm_62 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st63_fsm_62 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_776) begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_652) begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_223) begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_231) begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_239) begin
        ap_sig_cseq_ST_st75_fsm_74 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_AWREADY)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_WREADY)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
            gmem_ARADDR = gmem_addr_3_reg_1580;
        end else if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
            gmem_ARADDR = gmem_addr_2_reg_1569;
        end else if (ap_sig_177) begin
            gmem_ARADDR = gmem_addr_reg_1408;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(exitcond3_fu_882_p2 == 1'b0) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st39_fsm_38) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)) | ((1'b1 == ap_sig_cseq_ST_st40_fsm_39) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st69_fsm_68) & (1'b0 == ap_reg_ioackin_gmem_AWREADY))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st75_fsm_74) & ~(gmem_BVALID == 1'b0))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(gmem_RVALID == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st63_fsm_62) & ~(gmem_RVALID == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(gmem_RVALID == 1'b0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st70_fsm_69) & (1'b0 == ap_reg_ioackin_gmem_WREADY))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(exitcond3_fu_882_p2 == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st63_fsm_62) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        grp_fu_431_p0 = sum_reg_314;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        grp_fu_431_p0 = sum_2_reg_397;
    end else begin
        grp_fu_431_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        grp_fu_431_p1 = reg_446;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        grp_fu_431_p1 = tp_reg_1591;
    end else begin
        grp_fu_431_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_687_ap_start = 1'b1;
    end else begin
        grp_fu_687_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_712_ap_start = 1'b1;
    end else begin
        grp_fu_712_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            if (~((1'b0 == grp_fu_687_ap_done) | (1'b0 == grp_fu_712_ap_done))) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end
        end
        ap_ST_st25_fsm_24 : begin
            if (~(1'b0 == exitcond1_fu_784_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st26_fsm_25 : begin
            if ((1'b0 == exitcond2_fu_827_p2)) begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end else begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            if ((1'b0 == exitcond_fu_861_p2)) begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st31_fsm_30 : begin
            if ((~(exitcond3_fu_882_p2 == 1'b0) & ~(~(exitcond3_fu_882_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)))) begin
                ap_NS_fsm = ap_ST_st57_fsm_56;
            end else if (((exitcond3_fu_882_p2 == 1'b0) & ~(~(exitcond3_fu_882_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY)))) begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end else begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            if (((1'b0 == exitcond4_fu_970_p2) & (1'b0 == brmerge_fu_1003_p2) & ~(1'b0 == tmp_28_fu_1016_p2))) begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end else if ((((1'b0 == exitcond4_fu_970_p2) & ~(1'b0 == brmerge_fu_1003_p2)) | ((1'b0 == exitcond4_fu_970_p2) & (1'b0 == tmp_28_fu_1016_p2)))) begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end else begin
                ap_NS_fsm = ap_ST_st31_fsm_30;
            end
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            if ((1'b0 == exitcond5_fu_1039_p2)) begin
                ap_NS_fsm = ap_ST_st39_fsm_38;
            end else begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end
        end
        ap_ST_st39_fsm_38 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) begin
                ap_NS_fsm = ap_ST_st40_fsm_39;
            end else begin
                ap_NS_fsm = ap_ST_st39_fsm_38;
            end
        end
        ap_ST_st40_fsm_39 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) begin
                ap_NS_fsm = ap_ST_st41_fsm_40;
            end else begin
                ap_NS_fsm = ap_ST_st40_fsm_39;
            end
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            if (~(gmem_RVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st47_fsm_46;
            end else begin
                ap_NS_fsm = ap_ST_st46_fsm_45;
            end
        end
        ap_ST_st47_fsm_46 : begin
            if (~(gmem_RVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end else begin
                ap_NS_fsm = ap_ST_st47_fsm_46;
            end
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            if (~(gmem_RVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st64_fsm_63;
            end else begin
                ap_NS_fsm = ap_ST_st63_fsm_62;
            end
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_NS_fsm = ap_ST_st70_fsm_69;
            end else begin
                ap_NS_fsm = ap_ST_st69_fsm_68;
            end
        end
        ap_ST_st70_fsm_69 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_WREADY)) begin
                ap_NS_fsm = ap_ST_st71_fsm_70;
            end else begin
                ap_NS_fsm = ap_ST_st70_fsm_69;
            end
        end
        ap_ST_st71_fsm_70 : begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            if (~(gmem_BVALID == 1'b0)) begin
                ap_NS_fsm = ap_ST_st30_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st75_fsm_74;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W4_sum_cast_fu_1102_p1 = W4_sum_fu_1097_p2;

assign W4_sum_fu_1097_p2 = (tmp_36_cast_cast_fu_1093_p1 + tmp_33_cast_reg_1315);

assign Wout_V_fu_734_p2 = (ap_const_lv16_1 + tmp_29_fu_730_p1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_170 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_177 = ((1'b1 == ap_sig_cseq_ST_st31_fsm_30) & ~(exitcond3_fu_882_p2 == 1'b0));
end

always @ (*) begin
    ap_sig_183 = (1'b1 == ap_CS_fsm[ap_const_lv32_3E]);
end

always @ (*) begin
    ap_sig_190 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_198 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_206 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_214 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_223 = (1'b1 == ap_CS_fsm[ap_const_lv32_44]);
end

always @ (*) begin
    ap_sig_231 = (1'b1 == ap_CS_fsm[ap_const_lv32_45]);
end

always @ (*) begin
    ap_sig_239 = (1'b1 == ap_CS_fsm[ap_const_lv32_4A]);
end

always @ (*) begin
    ap_sig_407 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_422 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_470 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_486 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_504 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_513 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_522 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_559 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_568 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_581 = (1'b1 == ap_CS_fsm[ap_const_lv32_22]);
end

always @ (*) begin
    ap_sig_606 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_615 = (1'b1 == ap_CS_fsm[ap_const_lv32_25]);
end

always @ (*) begin
    ap_sig_635 = (1'b1 == ap_CS_fsm[ap_const_lv32_32]);
end

always @ (*) begin
    ap_sig_644 = (1'b1 == ap_CS_fsm[ap_const_lv32_37]);
end

always @ (*) begin
    ap_sig_652 = (1'b1 == ap_CS_fsm[ap_const_lv32_43]);
end

always @ (*) begin
    ap_sig_769 = (1'b1 == ap_CS_fsm[ap_const_lv32_33]);
end

always @ (*) begin
    ap_sig_776 = (1'b1 == ap_CS_fsm[ap_const_lv32_3F]);
end

always @ (*) begin
    ap_sig_785 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_92 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign bias6_sum_cast_fu_808_p1 = bias6_sum_fu_803_p2;

assign bias6_sum_fu_803_p2 = (tmp_15_cast_fu_795_p1 + tmp_30_cast_reg_1310);

assign brmerge_fu_1003_p2 = (tmp_32_fu_995_p3 | rev_reg_1518);

assign cin_fu_1044_p2 = (i_op_assign_reg_409 + ap_const_lv16_1);

assign cout_fu_789_p2 = (i_op_assign_s_reg_247 + ap_const_lv16_1);

assign exitcond1_fu_784_p2 = ((i_op_assign_s_reg_247 == CHout_V_read_reg_1216) ? 1'b1 : 1'b0);

assign exitcond2_fu_827_p2 = ((i_op_assign_1_reg_258 == tmp_7_reg_1330) ? 1'b1 : 1'b0);

assign exitcond3_fu_882_p2 = ((i_op_assign_3_reg_326 == Ky_V_read_reg_1203) ? 1'b1 : 1'b0);

assign exitcond4_fu_970_p2 = ((i_op_assign_5_reg_367 == Kx_V_read_reg_1209) ? 1'b1 : 1'b0);

assign exitcond5_fu_1039_p2 = ((i_op_assign_reg_409 == CHin_V_read_reg_1228) ? 1'b1 : 1'b0);

assign exitcond_fu_861_p2 = ((i_op_assign_2_reg_280 == Wout_V_reg_1325) ? 1'b1 : 1'b0);

assign feature_in2_sum9_cast_fu_1064_p1 = $signed(feature_in2_sum9_fu_1059_p2);

assign feature_in2_sum9_fu_1059_p2 = (r_V_17_fu_1054_p2 + tmp_35_cast_reg_1320);

assign feature_out8_sum_cast_fu_938_p1 = feature_out8_sum_fu_933_p2;

assign feature_out8_sum_fu_933_p2 = (tmp_29_cast_reg_1305 + tmp_26_cast_cast_fu_929_p1);

assign grp_fu_1034_p0 = grp_fu_1034_p00;

assign grp_fu_1034_p00 = tmp_fu_1025_p2;

assign grp_fu_1034_p1 = rhs_V_8_cast_reg_1372;

assign grp_fu_1180_p0 = rhs_V_1_reg_1355;

assign grp_fu_687_p0 = $signed(r_V_4_fu_674_p2);

assign grp_fu_687_p1 = grp_fu_687_p10;

assign grp_fu_687_p10 = Sx_V_read_reg_1197;

assign grp_fu_712_p0 = $signed(r_V_8_fu_699_p2);

assign grp_fu_712_p1 = grp_fu_712_p10;

assign grp_fu_712_p10 = Sy_V_read_reg_1191;

assign grp_fu_846_p0 = grp_fu_846_p00;

assign grp_fu_846_p00 = r_V_10_reg_1432;

assign grp_fu_846_p1 = rhs_V_8_cast_reg_1372;

assign grp_fu_951_p1 = rhs_V_2_reg_1362;

assign h_V_fu_897_p2 = (tmp_17_reg_1427 + tmp_25_fu_893_p1);

assign i_fu_832_p2 = (i_op_assign_1_reg_258 + ap_const_lv16_1);

assign ii_fu_887_p2 = (i_op_assign_3_reg_326 + ap_const_lv8_1);

assign j_fu_866_p2 = (i_op_assign_2_reg_280 + ap_const_lv16_1);

assign jj_fu_975_p2 = (i_op_assign_5_reg_367 + ap_const_lv8_1);

assign lhs_V_11_cast_fu_1012_p1 = w_V_fu_985_p2;

assign lhs_V_14_cast_fu_1021_p1 = r_V_19_reg_382;

assign lhs_V_15_cast_fu_906_p1 = h_V_fu_897_p2;

assign lhs_V_1_cast_fu_550_p1 = Ky_V;

assign lhs_V_2_cast_fu_636_p1 = Win_V;

assign lhs_V_4_cast_fu_658_p1 = Hin_V;

assign lhs_V_cast_fu_492_p1 = Kx_V;

assign next_mul1_fu_818_p2 = (phi_mul1_reg_269 + tmp_9_reg_1335);

assign next_mul2_fu_851_p2 = (phi_mul3_reg_303 + tmp_10_reg_1345);

assign next_mul3_fu_856_p2 = (r_V_11_reg_291 + rhs_V_9_cast_reg_1383);

assign next_mul4_fu_877_p2 = (r_V_18_reg_337 + rhs_V_1_cast_reg_1367);

assign next_mul5_fu_965_p2 = (r_V_19_reg_382 + rhs_V_10_cast_reg_1378);

assign next_mul_fu_1074_p2 = (rhs_V_9_cast_reg_1383 + r_V_20_reg_420);

assign notlhs_fu_1129_p2 = ((tmp_20_fu_1115_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_1135_p2 = ((tmp_31_fu_1125_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_1_fu_608_p3 = ((mode_V[0:0] === 1'b1) ? pad_x_V_fu_542_p3 : ap_const_lv8_0);

assign p_2_fu_616_p3 = ((mode_V[0:0] === 1'b1) ? pad_y_V_fu_600_p3 : ap_const_lv8_0);

assign p_neg4_fu_510_p2 = (ap_const_lv9_1 - lhs_V_cast_fu_492_p1);

assign p_neg_fu_568_p2 = (ap_const_lv9_1 - lhs_V_1_cast_fu_550_p1);

assign p_s_fu_1158_p3 = ((r_V_9_fu_1153_p2[0:0] === 1'b1) ? ap_const_lv32_0 : sum_3_reg_1601);

assign pad_x_V_fu_542_p3 = ((tmp_18_fu_502_p3[0:0] === 1'b1) ? tmp_3_fu_526_p2 : tmp_6_fu_532_p4);

assign pad_y_V_fu_600_p3 = ((tmp_21_fu_560_p3[0:0] === 1'b1) ? tmp_8_fu_584_p2 : tmp_12_fu_590_p4);

assign r_V_10_fu_1170_p0 = r_V_10_fu_1170_p00;

assign r_V_10_fu_1170_p00 = i_op_assign_1_reg_258;

assign r_V_10_fu_1170_p1 = rhs_V_7_cast_reg_1389;

assign r_V_13_fu_1165_p0 = r_V_13_fu_1165_p00;

assign r_V_13_fu_1165_p00 = r_V_18_reg_337;

assign r_V_13_fu_1165_p1 = rhs_V_1_reg_1355;

assign r_V_16_fu_1175_p0 = rhs_V_1_reg_1355;

assign r_V_17_fu_1054_p2 = ($signed(rhs_V_14_cast_fu_1050_p1) + $signed(r_V_15_reg_1546));

assign r_V_1_fu_554_p2 = ($signed(ap_const_lv9_1FF) + $signed(lhs_V_1_cast_fu_550_p1));

assign r_V_2_cast_fu_632_p1 = r_V_2_fu_624_p3;

assign r_V_2_fu_624_p3 = {{p_1_fu_608_p3}, {1'b0}};

assign r_V_3_cast_fu_668_p1 = r_V_3_reg_1270;

assign r_V_3_fu_640_p2 = (lhs_V_2_cast_fu_636_p1 + r_V_2_cast_fu_632_p1);

assign r_V_4_fu_674_p2 = (r_V_3_cast_fu_668_p1 - rhs_V_2_cast_fu_671_p1);

assign r_V_6_cast_fu_654_p1 = r_V_6_fu_646_p3;

assign r_V_6_fu_646_p3 = {{p_2_fu_616_p3}, {1'b0}};

assign r_V_7_cast_fu_693_p1 = r_V_7_reg_1280;

assign r_V_7_fu_662_p2 = (lhs_V_4_cast_fu_658_p1 + r_V_6_cast_fu_654_p1);

assign r_V_8_fu_699_p2 = (r_V_7_cast_fu_693_p1 - rhs_V_5_cast_fu_696_p1);

assign r_V_9_fu_1153_p2 = (rhs_V_fu_1147_p2 & relu_en_V_read_reg_1186);

assign r_V_fu_496_p2 = ($signed(ap_const_lv9_1FF) + $signed(lhs_V_cast_fu_492_p1));

assign rev_fu_960_p2 = (slt_reg_1493 ^ 1'b1);

assign rhs_V_10_cast_fu_774_p1 = CHin_V_read_reg_1228;

assign rhs_V_14_cast_fu_1050_p1 = i_op_assign_reg_409;

assign rhs_V_1_cast_fu_768_p1 = Kx_V_read_reg_1209;

assign rhs_V_1_fu_762_p1 = CHin_V_read_reg_1228;

assign rhs_V_2_cast_fu_671_p1 = Kx_V_read_reg_1209;

assign rhs_V_2_fu_765_p1 = Win_V_read_reg_1223;

assign rhs_V_5_cast_fu_696_p1 = Ky_V_read_reg_1203;

assign rhs_V_7_cast_fu_780_p1 = Wout_V_fu_734_p2;

assign rhs_V_8_cast_fu_771_p1 = CHout_V_read_reg_1216;

assign rhs_V_9_cast_fu_777_p1 = CHout_V_read_reg_1216;

assign rhs_V_fu_1147_p2 = (tmp_22_fu_1141_p2 & tmp_23_fu_441_p2);

assign slt_fu_910_p2 = (($signed(lhs_V_15_cast_fu_906_p1) < $signed(lhs_V_4_cast_reg_1275)) ? 1'b1 : 1'b0);

assign sum_4_to_int_fu_1112_p1 = sum_3_reg_1601;

assign tmp2_cast_fu_1084_p1 = tmp2_fu_1079_p2;

assign tmp2_fu_1079_p2 = (tmp_17_cast_reg_1402 + r_V_20_reg_420);

assign tmp3_cast_fu_920_p1 = tmp3_fu_915_p2;

assign tmp3_fu_915_p2 = (tmp_17_cast_reg_1402 + r_V_11_reg_291);

assign tmp_10_fu_756_p1 = Sx_V_read_reg_1197;

assign tmp_11_fu_759_p1 = p_1_reg_1255;

assign tmp_12_fu_590_p4 = {{r_V_1_fu_554_p2[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_15_cast_fu_795_p1 = i_op_assign_s_reg_247;

assign tmp_17_cast_fu_799_p1 = i_op_assign_s_reg_247;

assign tmp_17_fu_838_p2 = (phi_mul1_reg_269 - tmp_s_reg_1340);

assign tmp_18_fu_502_p3 = r_V_fu_496_p2[ap_const_lv32_8];

assign tmp_19_fu_872_p2 = (phi_mul3_reg_303 - tmp_11_reg_1350);

assign tmp_20_fu_1115_p4 = {{sum_4_to_int_fu_1112_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_21_fu_560_p3 = r_V_1_fu_554_p2[ap_const_lv32_8];

assign tmp_22_fu_1141_p2 = (notrhs_fu_1135_p2 | notlhs_fu_1129_p2);

assign tmp_24_fu_924_p2 = (r_V_5_reg_1442 + tmp3_cast_fu_920_p1);

assign tmp_25_fu_893_p1 = i_op_assign_3_reg_326;

assign tmp_26_cast_cast_fu_929_p1 = tmp_24_fu_924_p2;

assign tmp_26_fu_981_p1 = i_op_assign_5_reg_367;

assign tmp_27_fu_990_p2 = (w_V_fu_985_p2 | h_V_reg_1483);

assign tmp_28_fu_1016_p2 = (($signed(lhs_V_11_cast_fu_1012_p1) < $signed(lhs_V_2_cast_reg_1265)) ? 1'b1 : 1'b0);

assign tmp_29_cast_fu_718_p1 = tmp_1_reg_1235;

assign tmp_29_fu_730_p1 = grp_fu_687_p2[15:0];

assign tmp_2_fu_516_p4 = {{p_neg4_fu_510_p2[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_30_cast_fu_721_p1 = tmp_5_reg_1240;

assign tmp_30_fu_740_p1 = grp_fu_712_p2[15:0];

assign tmp_31_fu_1125_p1 = sum_4_to_int_fu_1112_p1[22:0];

assign tmp_32_fu_995_p3 = tmp_27_fu_990_p2[ap_const_lv32_F];

assign tmp_33_cast_fu_724_p1 = tmp_15_reg_1245;

assign tmp_33_fu_1088_p2 = (tmp1_reg_1556 + tmp2_cast_fu_1084_p1);

assign tmp_35_cast_fu_727_p1 = tmp_16_reg_1250;

assign tmp_36_cast_cast_fu_1093_p1 = tmp_33_fu_1088_p2;

assign tmp_3_fu_526_p2 = (ap_const_lv8_0 - tmp_2_fu_516_p4);

assign tmp_4_fu_574_p4 = {{p_neg_fu_568_p2[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_6_fu_532_p4 = {{r_V_fu_496_p2[ap_const_lv32_8 : ap_const_lv32_1]}};

assign tmp_7_fu_744_p2 = (ap_const_lv16_1 + tmp_30_fu_740_p1);

assign tmp_8_fu_584_p2 = (ap_const_lv8_0 - tmp_4_fu_574_p4);

assign tmp_9_fu_750_p1 = Sy_V_read_reg_1191;

assign tmp_fu_1025_p2 = (r_V_13_reg_1513 + lhs_V_14_cast_fu_1021_p1);

assign tmp_s_fu_753_p1 = p_2_reg_1260;

assign w_V_fu_985_p2 = (tmp_26_fu_981_p1 + tmp_19_reg_1465);

always @ (posedge ap_clk) begin
    lhs_V_2_cast_reg_1265[16] <= 1'b0;
    lhs_V_4_cast_reg_1275[16] <= 1'b0;
    tmp_29_cast_reg_1305[48:30] <= 19'b0000000000000000000;
    tmp_30_cast_reg_1310[30] <= 1'b0;
    tmp_33_cast_reg_1315[48:30] <= 19'b0000000000000000000;
    tmp_35_cast_reg_1320[47:30] <= 18'b000000000000000000;
    tmp_9_reg_1335[15:8] <= 8'b00000000;
    tmp_s_reg_1340[15:8] <= 8'b00000000;
    tmp_10_reg_1345[15:8] <= 8'b00000000;
    tmp_11_reg_1350[15:8] <= 8'b00000000;
    rhs_V_1_reg_1355[31:16] <= 16'b0000000000000000;
    rhs_V_2_reg_1362[47:16] <= 32'b00000000000000000000000000000000;
    rhs_V_1_cast_reg_1367[15:8] <= 8'b00000000;
    rhs_V_8_cast_reg_1372[47:16] <= 32'b00000000000000000000000000000000;
    rhs_V_10_cast_reg_1378[23:16] <= 8'b00000000;
    rhs_V_9_cast_reg_1383[31:16] <= 16'b0000000000000000;
    rhs_V_7_cast_reg_1389[31:16] <= 16'b0000000000000000;
    tmp_17_cast_reg_1402[31:16] <= 16'b0000000000000000;
    gmem_addr_reg_1408[31] <= 1'b0;
end

endmodule //Conv
